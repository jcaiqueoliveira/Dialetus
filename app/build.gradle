apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

android {
    compileSdkVersion AndroidConfig.compileSdk

    def currentVersion = Versioning.getVersion()

    defaultConfig {
        applicationId AndroidConfig.applicationId
        minSdkVersion AndroidConfig.minSdk
        targetSdkVersion AndroidConfig.targetSdk
        versionCode currentVersion.code
        versionName currentVersion.name
        testInstrumentationRunner AndroidConfig.instrumentationTestRunner

        archivesBaseName = "app-${currentVersion.name}"

        vectorDrawables.useSupportLibrary = true
        vectorDrawables.generatedDensities = []

        resConfigs "pt-rBR"

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildTypes {

        debug {
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            crunchPngs false
            minifyEnabled false

            applicationIdSuffix ".dev"
            lintOptions { tasks.lint.enabled = false }

            defaultConfig { resConfigs "xxxhdpi" }
        }

        release {
            minifyEnabled true
            shrinkResources true
            crunchPngs true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/main.kotlin_module'
        exclude '**/*.properties'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'
        disable 'OldTargetApi'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

androidExtensions {
    experimental = true
}


dependencies {

    implementation project(':domain')
    implementation project(':presentation')
    implementation project(':data')

    implementation Dependencies.okhttp
    implementation Dependencies.okhttpInterceptor

    AndroidModule.main.forEach { implementation it }
    AndroidModule.unitTesting.forEach { testImplementation it }
    AndroidModule.androidTesting.forEach { androidTestImplementation it }
}

configurations.all {
    resolutionStrategy {
        forcedModules = AndroidModule.main.toArray()
    }
}
